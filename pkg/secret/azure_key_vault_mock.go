// Code generated by MockGen. DO NOT EDIT.
// Source: azure_key_vault.go

// Package secret is a generated GoMock package.
package secret

import (
	context "context"
	reflect "reflect"

	azsecrets "github.com/Azure/azure-sdk-for-go/sdk/keyvault/azsecrets"
	gomock "github.com/golang/mock/gomock"
)

// MockazureKeyVaultClient is a mock of azureKeyVaultClient interface.
type MockazureKeyVaultClient struct {
	ctrl     *gomock.Controller
	recorder *MockazureKeyVaultClientMockRecorder
}

// MockazureKeyVaultClientMockRecorder is the mock recorder for MockazureKeyVaultClient.
type MockazureKeyVaultClientMockRecorder struct {
	mock *MockazureKeyVaultClient
}

// NewMockazureKeyVaultClient creates a new mock instance.
func NewMockazureKeyVaultClient(ctrl *gomock.Controller) *MockazureKeyVaultClient {
	mock := &MockazureKeyVaultClient{ctrl: ctrl}
	mock.recorder = &MockazureKeyVaultClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockazureKeyVaultClient) EXPECT() *MockazureKeyVaultClientMockRecorder {
	return m.recorder
}

// DeleteSecret mocks base method.
func (m *MockazureKeyVaultClient) DeleteSecret(ctx context.Context, name string, options *azsecrets.DeleteSecretOptions) (azsecrets.DeleteSecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecret", ctx, name, options)
	ret0, _ := ret[0].(azsecrets.DeleteSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSecret indicates an expected call of DeleteSecret.
func (mr *MockazureKeyVaultClientMockRecorder) DeleteSecret(ctx, name, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecret", reflect.TypeOf((*MockazureKeyVaultClient)(nil).DeleteSecret), ctx, name, options)
}

// GetSecret mocks base method.
func (m *MockazureKeyVaultClient) GetSecret(ctx context.Context, name, version string, options *azsecrets.GetSecretOptions) (azsecrets.GetSecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", ctx, name, version, options)
	ret0, _ := ret[0].(azsecrets.GetSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockazureKeyVaultClientMockRecorder) GetSecret(ctx, name, version, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockazureKeyVaultClient)(nil).GetSecret), ctx, name, version, options)
}

// SetSecret mocks base method.
func (m *MockazureKeyVaultClient) SetSecret(ctx context.Context, name string, parameters azsecrets.SetSecretParameters, options *azsecrets.SetSecretOptions) (azsecrets.SetSecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSecret", ctx, name, parameters, options)
	ret0, _ := ret[0].(azsecrets.SetSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetSecret indicates an expected call of SetSecret.
func (mr *MockazureKeyVaultClientMockRecorder) SetSecret(ctx, name, parameters, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSecret", reflect.TypeOf((*MockazureKeyVaultClient)(nil).SetSecret), ctx, name, parameters, options)
}
