// Code generated by MockGen. DO NOT EDIT.
// Source: key_vault.go

// Package secret is a generated GoMock package.
package secret

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeyVault is a mock of KeyVault interface.
type MockKeyVault struct {
	ctrl     *gomock.Controller
	recorder *MockKeyVaultMockRecorder
}

// MockKeyVaultMockRecorder is the mock recorder for MockKeyVault.
type MockKeyVaultMockRecorder struct {
	mock *MockKeyVault
}

// NewMockKeyVault creates a new mock instance.
func NewMockKeyVault(ctrl *gomock.Controller) *MockKeyVault {
	mock := &MockKeyVault{ctrl: ctrl}
	mock.recorder = &MockKeyVaultMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyVault) EXPECT() *MockKeyVaultMockRecorder {
	return m.recorder
}

// DeleteSecret mocks base method.
func (m *MockKeyVault) DeleteSecret(ctx context.Context, name string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecret", ctx, name)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSecret indicates an expected call of DeleteSecret.
func (mr *MockKeyVaultMockRecorder) DeleteSecret(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecret", reflect.TypeOf((*MockKeyVault)(nil).DeleteSecret), ctx, name)
}

// ReadSecret mocks base method.
func (m *MockKeyVault) ReadSecret(ctx context.Context, name string) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadSecret", ctx, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadSecret indicates an expected call of ReadSecret.
func (mr *MockKeyVaultMockRecorder) ReadSecret(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadSecret", reflect.TypeOf((*MockKeyVault)(nil).ReadSecret), ctx, name)
}

// StoreSecret mocks base method.
func (m *MockKeyVault) StoreSecret(ctx context.Context, name, value string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreSecret", ctx, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreSecret indicates an expected call of StoreSecret.
func (mr *MockKeyVaultMockRecorder) StoreSecret(ctx, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreSecret", reflect.TypeOf((*MockKeyVault)(nil).StoreSecret), ctx, name, value)
}
